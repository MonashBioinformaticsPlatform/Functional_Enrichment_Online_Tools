}
if (!requireNamespace("downlit", quietly = TRUE)) {
install.packages("downlit")
}
packageVersion("downlit")
install.packages("bookdown")
renv::restore()
renv::restore()
renv::restore()
renv::snapshot()
y
renv::snapshot(); y
renv::snapshot()
renv::status()
packageVersion("downlit")
renv::restore()
renv::restore()
renv::restore()
.rs.restartR()
renv::status()
renv::snapshot()
renv::restore()
renv::status()
renv::restore()
version
renv::status()
renv::snapshot()
library(knitr)
suppressWarnings(library(kableExtra))
# Create the table data
schedule <- data.frame(
Day = c("Day 1", "", "", "", "", "", "", "", "", "", "", "Day 1", "Day 2", "", "", "", "", "", "", "", "", "Day 2"),
Instructor = c("", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "", "", "HK", "CW", "CW", "CW", "CW", "CW", "CW", "CW", ""),
Activity = c("Welcome and housekeeping",
"Introduction",
"Data acquisition",
"Filtering gene list",
"Hands-on with Interactive Calculator (breakout rooms); https://bioinformatics3.erc.monash.edu/rsconnect/content/241/",
"gProfiler [GO + pathways] (https://biit.cs.ut.ee/gprofiler/gost)",
"Hands-on with gProfiler (breakout rooms)",
"Break",
"STRING (https://string-db.org/)",
"Reactome (https://reactome.org/)",
"GSEA (GenePattern) (https://cloud.genepattern.org/gp/pages/index.jsf)",
"3 hrs",
"Welcome and housekeeping",
"Day -1 recap",
"Using R for functional enrichment analysis; Applications and advantages; Working with confidential data; Customisation, flexibility, reproducibility; Automation and batch processing",
"Available packages in R -; Clusterprofiler; Gprofiler; Any other?",
"Introducing R, R Markdown, Rstudio; Getting logged on RStudio environment; Discuss R Markdown; Discuss basic features of Rstudio",
"Clusterprofiler - Handon; Breakout rooms; Work on and discuss results based on following criterion; Analysis; ORA; GSEA; Ontologies; GO; Pathway (KEGG, Reactome); …; Visualisations",
"gprofiler - Handson; Breakout rooms; Work on and discuss specific features; gost function with standard analysis and plots - Discuss how the plots from gprofiler are different (than clusterprofiler) and also useful; Send  analysis from R to g:Profiler web interface ; Sharing the results easily with colleagues ; To accompany a publication without the peers having to run the full analysis code in R; Integrating results with external tools for visualisations; Alter results using ggplot2, enrichplot, clusterProfiler; Using custom annotations; Non-model organisms, that are not annotated in the Ensembl database; Enable users to upload custom annotation files",
"Experiment wrap up  ; Discuss results; Enrichments look different from different tools - Why",
"Wrap up and feedback",
"3 hrs"),
`Time (mins)` = c(10, 10, 5, 15, 15, 20, 20, 15, 20, 20, 30, "", 5, 15, 30, 5, 30, 30, 30, 30, 5, ""),
check.names = FALSE
)
# Render the table with specified column widths
kable(schedule, "html", escape = FALSE) %>%
kable_styling(full_width = FALSE, position = "center") %>%
column_spec(1, width = "10em", bold = TRUE) %>%  # Adjust width
column_spec(3, width = "25em")  # Center align
renv::status()
renv::snapshot()
renv::status()
renv::snapshot()
.libPaths()
env::restore()
renv::restore()
renv::status()
renv::snapshot()
renv::status()
renv::snapshot()
library(knitr)
suppressWarnings(library(kableExtra))
library(downlit)
# Create the table data
schedule <- data.frame(
Day = c("Day 1", "", "", "", "", "", "", "", "", "", "", "Day 1", "Day 2", "", "", "", "", "", "", "", "", "Day 2"),
Instructor = c("", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "", "", "HK", "CW", "CW", "CW", "CW", "CW", "CW", "CW", ""),
Activity = c("Welcome and housekeeping",
"Introduction",
"Data acquisition",
"Filtering gene list",
"Hands-on with Interactive Calculator (breakout rooms); https://bioinformatics3.erc.monash.edu/rsconnect/content/241/",
"gProfiler [GO + pathways] (https://biit.cs.ut.ee/gprofiler/gost)",
"Hands-on with gProfiler (breakout rooms)",
"Break",
"STRING (https://string-db.org/)",
"Reactome (https://reactome.org/)",
"GSEA (GenePattern) (https://cloud.genepattern.org/gp/pages/index.jsf)",
"3 hrs",
"Welcome and housekeeping",
"Day -1 recap",
"Using R for functional enrichment analysis; Applications and advantages; Working with confidential data; Customisation, flexibility, reproducibility; Automation and batch processing",
"Available packages in R -; Clusterprofiler; Gprofiler; Any other?",
"Introducing R, R Markdown, Rstudio; Getting logged on RStudio environment; Discuss R Markdown; Discuss basic features of Rstudio",
"Clusterprofiler - Handon; Breakout rooms; Work on and discuss results based on following criterion; Analysis; ORA; GSEA; Ontologies; GO; Pathway (KEGG, Reactome); …; Visualisations",
"gprofiler - Handson; Breakout rooms; Work on and discuss specific features; gost function with standard analysis and plots - Discuss how the plots from gprofiler are different (than clusterprofiler) and also useful; Send  analysis from R to g:Profiler web interface ; Sharing the results easily with colleagues ; To accompany a publication without the peers having to run the full analysis code in R; Integrating results with external tools for visualisations; Alter results using ggplot2, enrichplot, clusterProfiler; Using custom annotations; Non-model organisms, that are not annotated in the Ensembl database; Enable users to upload custom annotation files",
"Experiment wrap up  ; Discuss results; Enrichments look different from different tools - Why",
"Wrap up and feedback",
"3 hrs"),
`Time (mins)` = c(10, 10, 5, 15, 15, 20, 20, 15, 20, 20, 30, "", 5, 15, 30, 5, 30, 30, 30, 30, 5, ""),
check.names = FALSE
)
# Render the table with specified column widths
kable(schedule, "html", escape = FALSE) %>%
kable_styling(full_width = FALSE, position = "center") %>%
column_spec(1, width = "10em", bold = TRUE) %>%  # Adjust width
column_spec(3, width = "25em")  # Center align
library(knitr)
suppressWarnings(library(kableExtra))
# Create the table data
gene_table <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
`..in term` = c(50, 200, 250),
`..not in term` = c(100, 15900, 16000),
Total = c(150, 16100, 16250),
check.names = FALSE
)
# Render the table with specified column widths
kable(gene_table, "html", escape = FALSE) %>%
kable_styling(full_width = FALSE, position = "center")
library(knitr)
suppressWarnings(library(kableExtra))
# Create the table data
gene_table <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
`..in term` = c(50, 200, 250),
`..not in term` = c(100, 15900, 16000),
Total = c(150, 16100, 16250),
check.names = FALSE
)
# Render the table with specified column widths
kable(gene_table, "html", escape = FALSE) %>%
kable_styling(full_width = FALSE, position = "center")
# Create the table with colored cells using kableExtra
gene_table %>%
kable() %>%
kable_styling() %>%
row_spec(1, background = c("#FFFF99", "#FFFF99")) %>%  # Color first row (50, 100)
row_spec(2, background = c("#FFFF99", "#FFFF99", NA, NA))  # Color second row (200, 15900)
library(knitr)
suppressWarnings(library(kableExtra))
# Create the table data
gene_table <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
`..in term` = c(50, 200, 250),
`..not in term` = c(100, 15900, 16000),
Total = c(150, 16100, 16250),
check.names = FALSE
)
# # Render the table with specified column widths
# kable(gene_table, "html", escape = FALSE) %>%
#   kable_styling(full_width = FALSE, position = "center")
# Use cell_spec to color specific cells
gene_table$`..in term` <- cell_spec(gene_table$`..in term`,
background = ifelse(gene_table$`..in term` %in% c(50, 200), "#FFFF99", NA))
gene_table <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
`..in term` = c(50, 200, 250),
`..not in term` = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
gene_table
gene_table$`..in term` <- cell_spec(gene_table$`..in term`,
background = ifelse(gene_table$`..in term` %in% c(50, 200), "#FFFF99", NULL))
gene_table$`..in term` <- cell_spec(gene_table$`..in term`,
background = ifelse(gene_table$`..in term` %in% c(50, 200), "#FFFF99", NULL))
gene_table$`..in term` <- cell_spec(gene_table$`..in term`,
background = ifelse(gene_table$`..in term` %in% c(50, 200), "#FFFF99", NULL))
# Create the table data
gene_table <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
`..in term` = c(50, 200, 250),
`..not in term` = c(100, 15900, 16000),
Total = c(150, 16100, 16250),
check.names = FALSE
)
gene_table$`..in term` <- cell_spec(gene_table$`..in term`,
background = ifelse(gene_table$`..in term` %in% c(50, 200), "#FFFF99", NULL))
# Create the data frame
gene_table <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
`..in term` = c(50, 200, 250),
`..not in term` = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Use cell_spec to color specific cells
gene_table$`..in term` <- cell_spec(gene_table$`..in term`,
background = ifelse(gene_table$`..in term` %in% c(50, 200), "#FFFF99", ""))
gene_table$`..not in term` <- cell_spec(gene_table$`..not in term`,
background = ifelse(gene_table$`..not in term` %in% c(100, 15900), "#FFFF99", ""))
gene_table %>%
kable(escape = FALSE, align = "c") %>%
kable_styling()
# Render the table with specified column widths
kable(gene_table, "html", escape = FALSE) %>%
kable_styling(full_width = FALSE, position = "center")
# Render the table with specified column widths
kable(gene_table, "html", escape = FALSE) %>%
kable_styling(full_width = FALSE, position = "center")
# Render the table with specified column widths
kable(gene_table, "html", escape = FALSE) %>%
kable_styling(full_width = FALSE, position = "center")
x=2
x
# Render the table with specified column widths
kable(gene_table, "html", escape = FALSE) %>%
kable_styling(full_width = FALSE, position = "center")
# Load necessary libraries
library(knitr)
library(kableExtra)
# Create the data frame
gene_table <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
`..in term` = c(50, 200, 250),
`..not in term` = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Use cell_spec to color specific cells
gene_table$`..in term` <- cell_spec(gene_table$`..in term`,
background = ifelse(gene_table$`..in term` %in% c(50, 200), "#FFFF99", ""))
gene_table$`..not in term` <- cell_spec(gene_table$`..not in term`,
background = ifelse(gene_table$`..not in term` %in% c(100, 15900), "#FFFF99", ""))
# Print the table with kableExtra
gene_table %>%
kable(escape = FALSE, align = "c") %>%
kable_styling()
renv::status()
renv::snapshot()
renv::status()
renv::snapshot()
# Load necessary packages
library(kableExtra)
# Define the data
df <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
"..in term" = c(50, 200, 250),
"..not in term" = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Create the table and highlight specific cells
df %>%
kbl() %>%
kable_styling() %>%
column_spec(2, bold = TRUE) %>%
cell_spec(1, 2, background = "lightblue") %>%  # highlight the cell with 50
cell_spec(1, 3, background = "lightblue") %>%  # highlight the cell with 100
cell_spec(2, 2, background = "lightgreen") %>%  # highlight the cell with 200
cell_spec(2, 3, background = "lightgreen")      # highlight the cell with 15900
# Load necessary package
library(kableExtra)
# Define the data
df <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
"..in term" = c(50, 200, 250),
"..not in term" = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Create the table and color specific cells
df %>%
kbl(escape = FALSE) %>%
kable_styling() %>%
column_spec(2, bold = TRUE) %>%
row_spec(1, background = "#add8e6") %>%  # Highlight the entire row 1 with light blue
row_spec(2, background = "#90ee90") %>%  # Highlight the entire row 2 with light green
row_spec(3, bold = TRUE)                 # Bold the total row
# Load necessary package
library(kableExtra)
# Define the data
df <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
"..in term" = c(50, 200, 250),
"..not in term" = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Manually color the four cells
df[1, 2] <- cell_spec(df[1, 2], background = "lightblue")  # Color 50
df[1, 3] <- cell_spec(df[1, 3], background = "lightblue")  # Color 100
df[2, 2] <- cell_spec(df[2, 2], background = "lightgreen") # Color 200
df[2, 3] <- cell_spec(df[2, 3], background = "lightgreen") # Color 15900
# Create the table
df %>%
kbl(escape = FALSE) %>%
kable_styling()
# Load necessary package
library(kableExtra)
# Define the data
df <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
"..in term" = c(50, 200, 250),
"..not in term" = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Manually color the four specific cells with a background color
df[1, 2] <- cell_spec(df[1, 2], color = "white", background = "lightblue")  # Color 50 with white text and light blue background
df[1, 3] <- cell_spec(df[1, 3], color = "white", background = "lightblue")  # Color 100 with white text and light blue background
df[2, 2] <- cell_spec(df[2, 2], color = "white", background = "lightgreen") # Color 200 with white text and light green background
df[2, 3] <- cell_spec(df[2, 3], color = "white", background = "lightgreen") # Color 15900 with white text and light green background
# Create the table with the background color applied to the specific cells
df %>%
kbl(escape = FALSE) %>%
kable_styling()
# Load necessary packages
library(kableExtra)
# Define the data
df <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
"..in term" = c(50, 200, 250),
"..not in term" = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Create the table and highlight specific cells
df %>%
kbl() %>%
kable_styling() %>%
column_spec(2, bold = TRUE) %>%
cell_spec(1, 2, background = "lightblue") %>%  # highlight the cell with 50
cell_spec(1, 3, background = "lightblue") %>%  # highlight the cell with 100
cell_spec(2, 2, background = "lightgreen") %>%  # highlight the cell with 200
cell_spec(2, 3, background = "lightgreen")      # highlight the cell with 15900
# Load necessary package
library(kableExtra)
# Define the data
df <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
"..in term" = c(50, 200, 250),
"..not in term" = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Manually color the four specific cells with a background color
df[1, 2] <- cell_spec(df[1, 2], color = "white", background = "lightblue")  # Color 50 with white text and light blue background
df[1, 3] <- cell_spec(df[1, 3], color = "white", background = "lightblue")  # Color 100 with white text and light blue background
df[2, 2] <- cell_spec(df[2, 2], color = "white", background = "lightgreen") # Color 200 with white text and light green background
df[2, 3] <- cell_spec(df[2, 3], color = "white", background = "lightgreen") # Color 15900 with white text and light green background
# Create the table with the background color applied to the specific cells
df %>%
kbl(escape = FALSE) %>%
kable_styling()
# Load necessary packages
library(kableExtra)
# Define the data
df <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
"..in term" = c(50, 200, 250),
"..not in term" = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Create the table and highlight specific cells
df %>%
kbl() %>%
kable_styling() %>%
column_spec(2, bold = TRUE) %>%
cell_spec(1, 2, background = "lightblue") %>%  # highlight the cell with 50
cell_spec(1, 3, background = "lightblue") %>%  # highlight the cell with 100
cell_spec(2, 2, background = "lightgreen") %>%  # highlight the cell with 200
cell_spec(2, 3, background = "lightgreen")      # highlight the cell with 15900
# Load necessary package
library(kableExtra)
# Define the data
df <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
"..in term" = c(50, 200, 250),
"..not in term" = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Manually color the four specific cells with background color
df[1, 2] <- cell_spec(df[1, 2], color = "black", background = "lightblue", escape = FALSE)  # Color 50 with background
df[1, 3] <- cell_spec(df[1, 3], color = "black", background = "lightblue", escape = FALSE)  # Color 100 with background
df[2, 2] <- cell_spec(df[2, 2], color = "black", background = "lightgreen", escape = FALSE) # Color 200 with background
df[2, 3] <- cell_spec(df[2, 3], color = "black", background = "lightgreen", escape = FALSE) # Color 15900 with background
# Create the table
df %>%
kbl(escape = FALSE) %>%
kable_styling()
# Load necessary package
library(kableExtra)
# Define the data frame
df <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
"..in term" = c(50, 200, 250),
"..not in term" = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Manually apply cell coloring using cell_spec
df[1, 2] <- cell_spec(df[1, 2], background = "lightblue", format = "html")  # Color 50
df[1, 3] <- cell_spec(df[1, 3], background = "lightblue", format = "html")  # Color 100
df[2, 2] <- cell_spec(df[2, 2], background = "lightgreen", format = "html") # Color 200
df[2, 3] <- cell_spec(df[2, 3], background = "lightgreen", format = "html") # Color 15900
# Create the table with the colored cells
df %>%
kbl(escape = FALSE, format = "html") %>%
kable_styling("striped", full_width = F)
# Load necessary package
library(kableExtra)
# Define the data
df <- data.frame(
Gene = c("..in gene list", "..not in gene list (but in background)", "Total"),
"..in term" = c(50, 200, 250),
"..not in term" = c(100, 15900, 16000),
Total = c(150, 16100, 16250)
)
# Create the table and color specific cells
df %>%
kbl(escape = FALSE) %>%
kable_styling() %>%
column_spec(2, bold = TRUE) %>%
row_spec(1, background = "#add8e6") %>%  # Highlight the entire row 1 with light blue
row_spec(2, background = "#90ee90") %>%  # Highlight the entire row 2 with light green
row_spec(3, bold = TRUE)                 # Bold the total row
library(knitr)
suppressWarnings(library(kableExtra))
library(downlit)
# Create the table data
schedule <- data.frame(
Day = c("Day 1", "", "", "", "", "", "", "", "", "", "", "Day 1", "Day 2", "", "", "", "", "", "", "", "", "Day 2"),
Instructor = c("", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "HK", "", "", "HK", "CW", "CW", "CW", "CW", "CW", "CW", "CW", ""),
Activity = c("Welcome and housekeeping",
"Introduction",
"Data acquisition",
"Filtering gene list",
"Hands-on with Interactive Calculator (breakout rooms); https://bioinformatics3.erc.monash.edu/rsconnect/content/241/",
"gProfiler [GO + pathways] (https://biit.cs.ut.ee/gprofiler/gost)",
"Hands-on with gProfiler (breakout rooms)",
"Break",
"STRING (https://string-db.org/)",
"Reactome (https://reactome.org/)",
"GSEA (GenePattern) (https://cloud.genepattern.org/gp/pages/index.jsf)",
"3 hrs",
"Welcome and housekeeping",
"Day -1 recap",
"Using R for functional enrichment analysis; Applications and advantages; Working with confidential data; Customisation, flexibility, reproducibility; Automation and batch processing",
"Available packages in R -; Clusterprofiler; Gprofiler; Any other?",
"Introducing R, R Markdown, Rstudio; Getting logged on RStudio environment; Discuss R Markdown; Discuss basic features of Rstudio",
"Clusterprofiler - Handon; Breakout rooms; Work on and discuss results based on following criterion; Analysis; ORA; GSEA; Ontologies; GO; Pathway (KEGG, Reactome); …; Visualisations",
"gprofiler - Handson; Breakout rooms; Work on and discuss specific features; gost function with standard analysis and plots - Discuss how the plots from gprofiler are different (than clusterprofiler) and also useful; Send  analysis from R to g:Profiler web interface ; Sharing the results easily with colleagues ; To accompany a publication without the peers having to run the full analysis code in R; Integrating results with external tools for visualisations; Alter results using ggplot2, enrichplot, clusterProfiler; Using custom annotations; Non-model organisms, that are not annotated in the Ensembl database; Enable users to upload custom annotation files",
"Experiment wrap up  ; Discuss results; Enrichments look different from different tools - Why",
"Wrap up and feedback",
"3 hrs"),
`Time (mins)` = c(10, 10, 5, 15, 15, 20, 20, 15, 20, 20, 30, "", 5, 15, 30, 5, 30, 30, 30, 30, 5, ""),
check.names = FALSE
)
# Render the table with specified column widths
kable(schedule, "html", escape = FALSE) %>%
kable_styling(full_width = FALSE, position = "center") %>%
column_spec(1, width = "10em", bold = TRUE) %>%  # Adjust width
column_spec(3, width = "25em")  # Center align
library(renv)
library(renv)
renv::status()
renv::snapshot()
renv::status()
renv::snapshot()
knitr::include_graphics("images/go_structure.png")
knitr::include_graphics("images/go_structure.png")
knitr::include_graphics("images/go_structure.png")
knitr::include_graphics("images/go_structure.png")
knitr::include_graphics("images/go_structure.png")
knitr::include_graphics("images/go_structure.png")
knitr::include_graphics("images/go_structure.png")
knitr::include_graphics("images/go_structure.png")
knitr::include_graphics("images/fea_types.jpg")
knitr::include_graphics("images/NOTCH_signaling_pathway.png")
knitr::include_graphics("images/NOTCH_signaling_pathway.png")
knitr::include_graphics("images/go_structure.png")
knitr::include_graphics("images/NOTCH_signaling_pathway.png")
knitr::include_graphics("images/go_structure.png")
knitr::include_graphics("images/NOTCH_signaling_pathway_reactome.png")
knitr::include_graphics("images/GSEA-homegraphic.gif")
getwd()
knitr::include_graphics("images/rstudio-new-notebook.jpg")
library(gprofiler)
library(gprofiler2)
renv::restore()
.libPaths()
.libPaths()
renv::restore()
renv::clean()
renv::clean()
renv::restore()
install.packages("fs")    # installs the latest release
renv::snapshot(prompt = FALSE)
renv::snapshot(prompt = FALSE)
renv::snapshot(prompt = FALSE)
renv::restore()
install.packages('fs')
library(fs)
install.packages("fs")                 # grabs latest fs
renv::snapshot(prompt = FALSE)         # updates renv.lock
rmarkdown::render_site(encoding = "UTF-8")
renv::install("bookdown")
rmarkdown::render_site(encoding = "UTF-8")
renv::restore(packages = c("downlit", "xml2"))
rmarkdown::render_site(encoding = "UTF-8")
renv::restore(packages = c("downlit", "xml2"), prompt = FALSE)
install.packages("xml2")            # no prompt
renv::snapshot(prompt = FALSE)
renv::restore(packages = "downlit", prompt = FALSE)
rmarkdown::render_site(encoding = "UTF-8")
renv::restore(packages = "kableExtra", prompt = FALSE)
install.packages("stringi")           # installs current CRAN binary
renv::snapshot(prompt = FALSE)        # update lockfile to that version
renv::restore(packages = "kableExtra", prompt = FALSE)
install.packages("stringi")
library(kableExtra)
renv::activate()
renv::status()
renv::restore()
renv::restore(packages = "kableExtra", prompt = FALSE)
renv::restore()
